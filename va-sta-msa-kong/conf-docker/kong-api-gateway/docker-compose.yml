version: '3.4'
# with docker-compose 2.1 depends-on with condition like service_healthy
# since docker-compose 3 depends-on with no more condition
# since version 3 , needs to ajust healthcheck/interval,timeout,retries
# healthcheck/start_period depuis v4.3

#  extra_hosts:
#      - "host.docker.internal:host-gateway"
# is docker-compose equivalent to --add-host=host.docker.internal:host-gateway
# and (on linux since v 20.10) it enable docker container to access host as host.docker.internal

networks:
  kong-net:
    driver: bridge
  mynetwork:
    external: true
      
services:

  ###################
  # kong-database
  ###################
  kong-database:
    image: postgres:9.6
    container_name: kong-database
    restart: always
    networks:
      - kong-net
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      start_period: 30s
      retries: 3
      
  #######################################
  # Kong database migration (initialisation)
  #######################################
  kong-migration:
    image: kong:latest
    command: "kong migrations bootstrap"
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_PASSWORD: kong
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: kong
    links:
      - kong-database
    depends_on:
      - kong-database    
      
  #######################################
  # kong-gateway : The API Gateway
  #######################################
  kong-gateway:
    image: kong:latest
    restart: always
    container_name: kong-gateway
    networks:
      - kong-net
      - mynetwork
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_PASSWORD: kong
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_PROXY_LISTEN: 0.0.0.0:8000
      KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    depends_on:
      - kong-migration
      - kong-database
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 20s
      timeout: 20s
      retries: 10
    ports:
      - "8001:8001"
      - "8000:8000"
      - "8443:8443"
      - "8444:8444"
      
  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    image: pantsel/konga:latest
    command: "-c prepare -a postgres -u postgresql://kong:${KONG_PG_PASSWORD:-kong}@kong-database:5432/konga"
    networks:
      - kong-net
    restart: on-failure
    depends_on:
      - kong-database

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga:latest
    restart: always
    container_name: konga
    networks:
        - kong-net   
    environment:
      DB_ADAPTER: postgres
      DB_URI: postgresql://kong:${KONG_PG_PASSWORD:-kong}@kong-database:5432/konga
      NODE_ENV: production
    depends_on:
      - kong-database
    ports:
      - "1337:1337"
